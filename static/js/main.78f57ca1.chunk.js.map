{"version":3,"sources":["ui/parcePrice.tsx","Transaction/historyRatioSlider.tsx","Transaction/historyHeader.tsx","actions/pretyNumbers.ts","Transaction/historyGraps.tsx","icons/letter.tsx","icons/manPlus.tsx","icons/upload.tsx","Transaction/historySliderGraps.tsx","Transaction/transaction.tsx","actions/sortMounth.ts","App.js","index.js"],"names":["ParcePrice","sum","sizeBigLetter","sizeLittleLeter","useState","bigLetter","smallLetter","title","setTitle","useEffect","i","indexOf","t","length","style","fontSize","fontWeight","Number","HistoryRatioSlider","index","page","className","titleHeader","HistoryHeader","num","bonuses","phone","setPage","slider","useRef","String","toString","replace","infinite","speed","dots","slidesToShow","slidesToScroll","arrows","ref","afterChange","map","item","width","HistoryGraps","children","color","grapSize","sizeOne","sizeTwo","sizeThree","circleMain","keyframes","circleGrey","circleWhite","MainCircle","styled","circle","GreyCircle","WhiteCircle","console","log","r","cx","cy","fill","strokeWidth","stroke","strokeDasharray","strokeDashoffset","React","memo","Letter","height","viewBox","xmlns","d","ManPlus","Upload","clip-path","id","colorGraps","HistorySliderGraps","col","Transaction","data","setData","hash","URLSearchParams","useLocation","search","get","setMounthData","Date","toLocaleString","month","mounth","fetch","then","response","ok","json","Promise","reject","catch","getMoney","inforForChacks","userParentReferals","userReferals","filter","a","popupDate","sortMounth","bonusCurrent","bonusTotal","userPhoneNumber","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78f57ca1.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\n\n\n\nexport const ParcePrice = ({ \n    sum,\n    sizeBigLetter = '31px',\n    sizeLittleLeter = '27px',\n}: { \n    sum: string ,\n    sizeBigLetter?:string,\n    sizeLittleLeter?:string,\n}): ReactElement => {\n\n    const [title, setTitle] = useState({\n        bigLetter: '',\n        smallLetter: '',\n    })\n\n    useEffect(() => {\n        if (sum) {\n            for (let i = 0; i < sum.length - 1; i++) {\n                if (sum.indexOf('.') > i) {\n                    setTitle((t) => ({ smallLetter: '', bigLetter: t.bigLetter += sum[i] }))\n                }\n                else {\n                    setTitle((t) => ({ ...t, smallLetter: t.smallLetter += sum[i + 1] }))\n\n                }\n            }\n        }\n    }, [sum])\n\n    return (\n        <>\n            {sum == `${title.bigLetter}.${title.smallLetter}`\n                ? <span style={{ fontSize: sizeBigLetter, fontWeight: 500}}>{title.bigLetter}\n                    <span style={{ fontSize: sizeLittleLeter, }}>,{Number(title.smallLetter) < 10 ? Number(title.smallLetter) * 10: title.smallLetter}</span> ₴</span>\n                : null\n            }\n        </>\n\n    )\n}\n\n\n","import React, { ReactElement } from 'react';\n\nexport const HistoryRatioSlider = ({\n    index,\n    page\n}: {\n    index: number,\n    page: number\n}): ReactElement => {\n    return (\n        <div className={`histori__header-ratio \n        ${index === page ? \"histori__header-ratio_active\" : ''}`}>\n        </div>\n    )\n}","import React, { ReactElement, useState } from 'react';\nimport { useRef } from 'react';\nimport Slider from \"react-slick\";\nimport { prettyNumbers } from '../actions/pretyNumbers';\nimport { ParcePrice } from '../ui/parcePrice';\nimport { HistoryRatioSlider } from './historyRatioSlider';\n\nconst titleHeader = [\"Всього зароблено\", \"Доступно бонусів\", \"Начислено бонусов за друзей\"]\n\nexport const HistoryHeader = ({\n    bonuses,\n    phone,\n}: {\n    phone: string,\n    bonuses: any\n}): ReactElement => {\n\n    const [page, setPage] = useState(0)\n    const slider = useRef(null)\n\n    return (\n        <div className=\"histori__header\">\n            <h6 className=\"histori__header-phone\">\n                {prettyNumbers(\n                    String(phone)\n                )}\n            </h6>\n            <Slider\n                infinite={true}\n                speed={500}\n                dots={false}\n                slidesToShow={1}\n                slidesToScroll={1}\n                arrows={false}\n                ref={slider}\n                afterChange={index => setPage(index)}\n            >\n                {bonuses.map((item: any, index: any) =>\n                    <div className=\"histori__header-slide\" style={{ width: \"80%\" }}>\n                        <h6 className=\"histori__header-titleslide\">{titleHeader[index]}</h6>\n                        <h5 className=\"histori__header-sum\">\n                            <ParcePrice sum={String(item)} />\n                        </h5>\n                    </div>\n                )}\n            </Slider>\n            <div className=\"histori__header-buttons\">\n                {bonuses.map((item: any, index: any) =>\n                    <HistoryRatioSlider\n                        index={index}\n                        page={page} />\n                )}\n            </div>\n        </div>\n    )\n}","export function prettyNumbers(num:string|number):string {\n    var n = num.toString();\n    return n.replace(/(\\d{3})\\D?(\\d{2})\\D?(\\d{3})\\D?(\\d{4})/,\"$1 $2 $3 $4\");\n}","import React, { ReactElement, ReactNode } from 'react';\nimport { useEffect } from 'react';\nimport styled, { keyframes } from \"styled-components\";\n\nconst HistoryGraps = ({\n\tchildren,\n\tcolor,\n\tgrapSize = {sizeOne: \"680\", sizeTwo:\"680\", sizeThree:\"0\"}\n}: {\n\tgrapSize?: {sizeOne: string, sizeTwo:string, sizeThree:string},\n\tcolor: string,\n\tchildren: ReactNode,\n}): ReactElement => {\n\tlet circleMain = keyframes`100% {stroke-dashoffset: ${grapSize.sizeOne};}`\n\tlet circleGrey = keyframes`100% {stroke-dashoffset: ${grapSize.sizeTwo};}`\n\tlet circleWhite = keyframes`100% {stroke-dashoffset: ${grapSize.sizeThree};}`\n\t\n\tlet MainCircle = styled.circle`\n         animation: 1.6s ${circleMain} linear;\n         animation-iteration-count: 1;\n         animation-fill-mode: forwards;\n       `\n\n\tlet GreyCircle = styled.circle`\n        animation: 0.8s ${circleGrey} linear;\n        animation-iteration-count: 1;\n        animation-fill-mode: forwards;\n      `\n\n\tlet WhiteCircle = styled.circle`\n       animation: 0s ${circleWhite} linear;\n       animation-iteration-count: 1;\n       animation-fill-mode: forwards;\n     `\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tconsole.log(\"unmount\");\n\t\t}\n\t},[])\n\n\treturn (\n\t\t<div className=\"histori__graps\">\n\t\t\t<svg className=\"histori__graps-item\">\n\t\t\t\t<WhiteCircle\n\t\t\t\t\tr=\"100\"\n\t\t\t\t\tcx=\"125\"\n\t\t\t\t\tcy=\"125\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeWidth=\"30\"\n\t\t\t\t\tstroke=\"#F6F8FE\"\n\t\t\t\t\tstrokeDasharray=\"630\"\n\t\t\t\t\tstrokeDashoffset=\"630\"\n\t\t\t\t></WhiteCircle>\n\t\t\t</svg>\n\t\t\t<svg className=\"histori__graps-item\">\n\t\t\t\t<GreyCircle\n\t\t\t\t\tr=\"100\"\n\t\t\t\t\tcx=\"125\"\n\t\t\t\t\tcy=\"125\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeWidth=\"30\"\n\t\t\t\t\tstroke=\"#DEE2E6\"\n\t\t\t\t\tstrokeDasharray=\"630\"\n\t\t\t\t\tstrokeDashoffset=\"630\"\n\t\t\t\t></GreyCircle>\n\t\t\t</svg>\n\t\t\t<svg className=\"histori__graps-item\">\n\t\t\t\t<MainCircle\n\t\t\t\t\tr=\"100\"\n\t\t\t\t\tcx=\"125\"\n\t\t\t\t\tcy=\"125\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeWidth=\"40\"\n\t\t\t\t\tstroke={`#${color}`}\n\t\t\t\t\tstrokeDasharray=\"630\"\n\t\t\t\t\tstrokeDashoffset=\"630\"\n\t\t\t\t></MainCircle>\n\t\t\t</svg>\n\t\t\t{children}\n\n\n\t\t</div>\n\t);\n}\n\n\nexport default React.memo(HistoryGraps)","import React, { ReactElement } from 'react';\n\nexport const Letter = (): ReactElement => {\n    return (\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M25.6296 0.77589C25.1274 0.544633 24.5359 0.634551 24.1251 1.00448L22.1755 2.73082L19.5229 0.358054C18.99 -0.119351 18.1832 -0.119351 17.6503 0.358054L14.9999 2.72857L12.3489 0.358054C11.8158 -0.119351 11.009 -0.119351 10.4759 0.358054L7.82266 2.73082L5.87117 1.00455C5.29535 0.49272 4.41359 0.544633 3.90177 1.12046C3.67262 1.37827 3.54708 1.71187 3.54947 2.05679V27.9432C3.54491 28.7147 4.16667 29.3439 4.93821 29.3484C5.28319 29.3505 5.6168 29.2247 5.87468 28.9955L7.82435 27.2692L10.4769 29.6419C11.0098 30.1193 11.8166 30.1193 12.3495 29.6419L14.9999 27.2711L17.6507 29.6417C18.1838 30.119 18.9906 30.119 19.5237 29.6417L22.1769 27.269L24.1284 28.9952C24.7042 29.5072 25.5859 29.4555 26.0978 28.8797C26.3272 28.6219 26.4527 28.288 26.4503 27.9429V2.05679C26.4573 1.50415 26.1345 1.00047 25.6296 0.77589ZM23.1048 26.2166C22.5719 25.7445 21.7696 25.7466 21.2392 26.2216L18.5867 28.5943L15.9362 26.2238C15.4033 25.7464 14.5964 25.7464 14.0634 26.2238L11.4127 28.5943L8.75907 26.2216C8.23066 25.7467 7.42983 25.7445 6.89883 26.2166L4.95443 27.9424V24.1979L4.94741 2.05714L6.89497 3.78307C7.42794 4.25521 8.23017 4.2531 8.76061 3.77808L11.4131 1.40538L14.0636 3.7759C14.5965 4.25331 15.4034 4.25331 15.9364 3.7759L18.5871 1.40538L21.2407 3.77808C21.7691 4.25303 22.57 4.25521 23.101 3.78314L25.0454 2.05679V19.8515L25.0524 27.9426L23.1048 26.2166Z\" fill=\"#479F76\" />\n            <path d=\"M21.6591 14.2974H8.34103C7.95305 14.2974 7.63855 14.6119 7.63855 14.9998C7.63855 15.3878 7.95305 15.7023 8.34103 15.7023H21.6591C22.0471 15.7023 22.3616 15.3878 22.3616 14.9998C22.3616 14.6119 22.047 14.2974 21.6591 14.2974Z\" fill=\"#479F76\" />\n            <path d=\"M15.3367 10.0823H8.34103C7.95305 10.0823 7.63855 10.3968 7.63855 10.7848C7.63855 11.1727 7.95305 11.4872 8.34103 11.4872H15.3367C15.7247 11.4872 16.0392 11.1727 16.0392 10.7848C16.0392 10.3968 15.7247 10.0823 15.3367 10.0823Z\" fill=\"#479F76\" />\n            <path d=\"M21.6591 18.512H8.34103C7.95305 18.512 7.63855 18.8265 7.63855 19.2144C7.63855 19.6024 7.95305 19.9169 8.34103 19.9169H21.6591C22.0471 19.9169 22.3616 19.6024 22.3616 19.2144C22.3616 18.8265 22.047 18.512 21.6591 18.512Z\" fill=\"#479F76\" />\n        </svg>\n\n    )\n}","import React, { ReactElement } from 'react';\n\nexport const ManPlus = (): ReactElement => {\n    return (\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11.8278 11.3805C14.9705 11.3805 17.5182 8.83277 17.5182 5.69013C17.5182 2.54749 14.9705 0 11.8278 0C8.68519 0 6.1377 2.54773 6.1377 5.69037C6.14123 8.83136 8.68684 11.377 11.8278 11.3805ZM11.8278 1.20536C14.3049 1.20536 16.3128 3.21327 16.3128 5.69037C16.3128 8.16724 14.3049 10.1751 11.8278 10.1751C9.35096 10.1751 7.34305 8.16724 7.34305 5.69037C7.34588 3.21444 9.35214 1.20818 11.8278 1.20536Z\" fill=\"#C29FFA\" />\n            <path d=\"M11.9764 13.3848C6.13021 13.3824 1.39047 18.1224 1.39282 23.9684V26.3972C1.39282 26.7301 1.66262 26.9999 1.9955 26.9999H21.9573C22.2902 26.9999 22.56 26.7301 22.56 26.3972V23.9684C22.5626 18.1224 17.8226 13.3824 11.9764 13.3848ZM21.3547 25.7946H2.59818V23.9684C2.58971 20.6122 4.37538 17.5075 7.28047 15.8268C10.1856 14.1464 13.7673 14.1464 16.6726 15.8268C19.5777 17.5075 21.3634 20.6122 21.3547 23.9684V25.7946Z\" fill=\"#C29FFA\" />\n            <circle cx=\"21\" cy=\"22.5\" r=\"7.5\" fill=\"white\" />\n            <path d=\"M21 15C16.8645 15 13.5 18.3645 13.5 22.5C13.5 26.6355 16.8645 30 21 30C25.1355 30 28.5 26.6355 28.5 22.5C28.5 18.3645 25.1355 15 21 15ZM21 28.9286C17.4552 28.9286 14.5714 26.0448 14.5714 22.5C14.5714 18.9552 17.4552 16.0714 21 16.0714C24.5448 16.0714 27.4286 18.9552 27.4286 22.5C27.4286 26.0448 24.5448 28.9286 21 28.9286Z\" fill=\"#C29FFA\" />\n            <path d=\"M20.9999 18.9285C20.7041 18.9285 20.4642 19.1683 20.4642 19.4642V25.5356C20.4642 25.8315 20.7041 26.0713 20.9999 26.0713C21.2958 26.0713 21.5357 25.8315 21.5357 25.5356V19.4642C21.5357 19.1683 21.2958 18.9285 20.9999 18.9285Z\" fill=\"#C29FFA\" />\n            <path d=\"M24.0359 21.9641H17.9644C17.6685 21.9641 17.4287 22.2039 17.4287 22.4998C17.4287 22.7957 17.6685 23.0355 17.9644 23.0355H24.0359C24.3318 23.0355 24.5716 22.7957 24.5716 22.4998C24.5716 22.2039 24.3318 21.9641 24.0359 21.9641Z\" fill=\"#C29FFA\" />\n        </svg>\n    )\n}\n\n\n","import React, { ReactElement } from 'react';\n\nexport const Upload = (): ReactElement => {\n    return (\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clip-path=\"url(#clip0)\">\n                <path d=\"M26.5626 30.0001H3.43845C1.54222 30.0001 0.000976562 28.4589 0.000976562 26.5626V20.9378C0.000976562 20.4204 0.420962 20.0004 0.938447 20.0004C1.45593 20.0004 1.87592 20.4204 1.87592 20.9378V26.5626C1.87592 27.4239 2.57719 28.1252 3.43845 28.1252H26.5626C27.4238 28.1252 28.1251 27.4239 28.1251 26.5626V20.9378C28.1251 20.4204 28.5451 20.0004 29.0626 20.0004C29.5801 20.0004 30 20.4204 30 20.9378V26.5626C30 28.4589 28.4588 30.0001 26.5626 30.0001Z\" fill=\"#95BEFC\" />\n                <path d=\"M15.0005 21.2503C14.483 21.2503 14.063 20.8303 14.063 20.3129V0.938386C14.063 0.420901 14.483 0.000915527 15.0005 0.000915527C15.518 0.000915527 15.9379 0.420901 15.9379 0.938386V20.3129C15.9379 20.8303 15.518 21.2503 15.0005 21.2503Z\" fill=\"#95BEFC\" />\n                <path d=\"M20.0002 6.87562C19.7603 6.87562 19.5202 6.78453 19.3378 6.60075L15.0004 2.26471L10.663 6.60075C10.2968 6.96695 9.70311 6.96695 9.33691 6.60075C8.97071 6.23455 8.97071 5.64085 9.33691 5.27442L14.3367 0.27465C14.7029 -0.0915499 15.2966 -0.0915499 15.663 0.27465L20.6628 5.27442C21.029 5.64085 21.029 6.23455 20.6628 6.60075C20.4804 6.78453 20.2403 6.87562 20.0002 6.87562Z\" fill=\"#95BEFC\" />\n            </g>\n            <defs>\n                <clipPath id=\"clip0\">\n                    <rect width=\"30\" height=\"30\" fill=\"white\" />\n                </clipPath>\n            </defs>\n        </svg>\n\n    )\n}\n\n","import React, { ReactElement, useState } from 'react';\nimport { useRef } from 'react';\nimport Slider from \"react-slick\";\nimport HistoryGraps from './historyGraps';\nimport { HistoryRatioSlider } from './historyRatioSlider';\nimport { ParcePrice } from '../ui/parcePrice';\nimport { Letter } from '../icons/letter';\nimport { ManPlus } from '../icons/manPlus';\nimport { Upload } from '../icons/upload';\n\nconst titleHeader = [\"Всього зароблено\", \"Доступно бонусів\", \"Начислено бонусов за друзей\"]\nconst colorGraps = [\"CFE7E5\", \"C5B3E6\", \"9EC5FE\"]\nconst grapSize = [\n    {sizeOne: \"600\", sizeTwo:\"500\", sizeThree:\"0\"},\n    {sizeOne: \"400\", sizeTwo:\"300\", sizeThree:\"0\"},\n    {sizeOne: \"200\", sizeTwo:\"100\", sizeThree:\"0\"},\n]\nconst HistorySliderGraps = (): ReactElement => {\n\n    const [page, setPage] = useState(0)\n    const slider = useRef(null)\n\n    return (\n        <div className=\"histori__slidergraps\">\n            <h6 className=\"histori__slidergraps-month\">\n                Червень 2021\n            </h6>\n            <Slider\n                infinite={true}\n                speed={500}\n                dots={false}\n                slidesToShow={1}\n                slidesToScroll={1}\n                arrows={false}\n                ref={slider}\n                afterChange={index => setPage(index)}\n                className=\"histori__slidergraps-slider\"\n     //           vertical={true}\n            >\n                {colorGraps.map((col, index) =>\n                    <HistoryGraps color={col} grapSize={index  === page ? grapSize[index] : {sizeOne: \"630\", sizeTwo:\"630\", sizeThree:\"0\"}}>\n                        {(() => {\n                            switch (index){\n                                case 0 :{\n                                    return <Letter />\n                                }\n                                case 1 :{\n                                    return <ManPlus />\n                                }\n                                case 2 :{\n                                    return <Upload />\n                                }\n                            }\n                        })()}\n                    </HistoryGraps>\n                )}\n            </Slider>\n            <h6 className=\"histori__slidergraps-title\">\n                {titleHeader[page]}\n            </h6>\n            <h6 className=\"histori__slidergraps-sum\">\n                <ParcePrice \n                    sum={\"345.3\"} \n                    sizeBigLetter={\"16px\"}\n                    sizeLittleLeter={\"12px\"}\n                />\n            </h6>\n            <div className=\"histori__header-buttons\">\n                {titleHeader.map((item: any, index: any) =>\n                    <HistoryRatioSlider\n                        index={index}\n                        page={page} />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(HistorySliderGraps)","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Shewron } from '../icons/shewron';\nimport { TransactionListItem } from './transactionListItem';\nimport { TransactionMounth } from './transactionMounth';\nimport { Popupshewron } from '../icons/popupshewron';\nimport { TransactionGraphikItem } from './transactionGraphikItem';\nimport { TransactionRefUserItem } from './transactionRefUserItem';\nimport { TransactionGetMonen } from './transactionGetMonen';\nimport { PointToСomma } from '../actions/pointToСomma'\nimport { useLocation } from 'react-router-dom';\nimport { prettyNumbers } from '../actions/pretyNumbers';\nimport { parseDate } from '../actions/parseDate';\nimport { sortData } from '../actions/sortData';\nimport { sortMounth } from '../actions/sortMounth'\n\nimport { HistoryHeader } from './historyHeader';\nimport HistorySliderGraps  from './historySliderGraps';\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n// /?h=pR0Qj7ZK66nV5PspAW2BVYyWdisHKr7PspAW2BVkxNEs\n\n\nexport const Transaction = (): ReactElement => {\n\n    const [activeGraphic, setActiveGraphic] = useState(false)\n    const [data, setData] = useState<any>(false)\n    const query = useQuery();\n    const hash = query.get('h');\n    const [mounthData, setMounthData] = useState<any>(false)\n    const [mounth, setMounth] = useState(new Date().toLocaleString('uk', { month: 'long' }))\n\n    useEffect(() => {\n        fetch(`https://mhp.inboost.ai:11132/api/hs/${hash}`)\n            .then(response => response.ok ? response.json() : Promise.reject(response))\n            .then(json => { setData(json) })\n            .catch(() => 'Error Data')\n    },\n        [])\n\n    useEffect(() => {\n        if (data) {\n            setMounthData(sortMounth(data, mounth))\n        }\n\n    }, [mounth, data])\n\n    console.log(data);\n    return (\n        <div>\n            <HistoryHeader \n                bonuses={[data.bonusCurrent, data.bonusTotal, data.bonusCurrent]}\n                phone={data.userPhoneNumber}\n            />\n            <HistorySliderGraps />\n\n\n\n{/*  \n            { mounthData ? <div className=\"transaction\" >\n                <div className=\"transaction-navbar\">\n                    <h6 className=\"transaction-navbar-title\">\n                        {`Історія Вашого профіля: +${prettyNumbers(String(data.userPhoneNumber))}`}\n                    </h6>\n                    <div className=\"transaction-navbar-bonus\">\n                        <div className=\"transaction-navbar-bonus-items\">\n                            <h6 className=\"transaction-navbar-bonus-items__price\">\n                                {PointToСomma(String(data.bonusCurrent))}\n                            </h6>\n                            <h6>Доступно бонусів</h6>\n                        </div>\n                        <div className=\"transaction-navbar-bonus-items\"\n                            onClick={() => setActiveGraphic(true)}>\n                            <Shewron />\n                            <h6 className=\"transaction-navbar-bonus-items__price\">\n                                {PointToСomma(String(data.bonusTotal))}\n                            </h6>\n                            <h6>Всього накопичено</h6>\n                        </div>\n                    </div>\n                    {activeGraphic ?\n                        <div className=\"transaction-navbar-popup\" onClick={() => setActiveGraphic(false)}>\n                            <h6 className=\"transaction-navbar-popup-title\">Накопичено бонусів помісячно</h6>\n                            <div className=\"transaction-navbar-popup-bonus\">\n                                <span></span>\n                                <span>Бонуси за чеки</span>\n                                <span></span>\n                                <span>Бонуси за друзів</span>\n                            </div>\n                            <div className=\"transaction-navbar-popup-graphic\">\n                                {data.graphBonus.map((c: any) => <TransactionGraphikItem\n                                    popupDate={c.popupDate}\n                                    bonusesChecks={c.bonusesChecks}\n                                    bonusesReferal={c.bonusesReferal}\n                                />)}\n                            </div>\n                            <div className=\"transaction-navbar-popup-shewron\">\n                                <Popupshewron />\n                            </div>\n                        </div>\n                        : null}\n                </div>\n                <div className=\"transaction-content\">\n                    <TransactionMounth\n                        cangeMounth={(val: string) => setMounth(val)}\n                    />\n                    <div className=\"transaction-content-list\">\n                        {\n                            sortData(mounthData).map((c: any) => {\n\n                                if (c.nameofmass === \"inforForChacks\")\n                                    return <TransactionListItem\n                                        key={c.idTransaction}\n                                        idTransaction={c.idTransaction}\n                                        bonus={!c.isBad && !c.isDublicat && !c.vidmova ? c.bonuses : 'error'}\n                                        title={'Бонус за чек'}\n                                        number={\n                                            (c.check_num === null || c.bonuses === 0) && (!c.isBad && !c.isDublicat && !c.vidmova) ? \"Чек обробляється\" :\n                                                !c.isBad && !c.isDublicat && !c.vidmova ? c.check_num :\n                                                    \"Чек відхилено\"}\n                                        date={parseDate(c.popupDate)}\n                                        _vidmova={c._vidmova}\n                                        vidmova={c.vidmova}\n                                    />\n                                if (c.nameofmass === \"userParentReferals\")\n                                    return <TransactionRefUserItem\n                                        countUserChecks={c.countUserChecks}\n                                        bonusChecks={c.bonusChecks}\n                                        bonus={c.bonuses}\n                                        number={c.userPhoneNumber === null ? \"\" : c.userPhoneNumber}\n                                        date={parseDate(c.popupDate)}\n                                        status={'userParentReferals'}\n                                    />\n                                if (c.nameofmass === \"UserReferals\")\n                                    return <TransactionRefUserItem\n                                        countUserChecks={c.countUserChecks}\n                                        bonusChecks={c.popupDate}\n                                        bonus={c.bonuses}\n                                        number={c.parentPhone}\n                                        date={parseDate(c.dateReferal)}\n                                        status={'UserReferals'}\n                                    />\n                                if (c.nameofmass === \"getMoney\")\n                                    return <TransactionGetMonen\n                                        bonus={c.sumMoney}\n                                        number={c.toPhoneNumber}\n                                        date={parseDate(c.popupDate)}\n                                    />\n                            })\n                        }\n                    </div>\n                </div>\n            </div > : null\n            } */}\n       \n        </div>\n    )\n}\n\n\n","export const sortMounth = (data: any, mounth: string) => {\n    const tempData = [...data.getMoney, ...data.inforForChacks, ...data.userParentReferals, ...data.userReferals]\n    return tempData.filter((a) => {\n        if (new Date(a.popupDate).toLocaleString('uk', { month: 'long' }) === mounth) {\n            return a\n        }\n        return 0\n    }\n    )\n}\n","import React  from 'react';\nimport { Transaction } from './Transaction/transaction';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n \nexport default function App(){\n  return(\n\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Transaction}/>          \n        </Switch>\n      </Router>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App  from './App'\nimport './styles/style.scss'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}